set(TARGET_NAME SSLReconstruction)
set(TEST_NAME SSLReconstructionTest)
# 配置资源文件
add_library(${TARGET_NAME} SHARED)
add_executable(${TEST_NAME}
    ${CMAKE_CURRENT_SOURCE_DIR}/test.cpp  # 你 EXE 的入口文件
)
#EXE 链接到 DLL
target_link_libraries(${TEST_NAME} PRIVATE ${TARGET_NAME})
file(GLOB CURRENT_DIR_HEADERS "*.h")
file(GLOB CURRENT_DIR_SRCS "*.cpp")
target_sources(${TARGET_NAME} PRIVATE
    ${CURRENT_DIR_HEADERS}
    ${CURRENT_DIR_SRCS}
)

# Opencv
set(OpenCV_DIR "D:/opencv4.7/opencv/build/x64/vc16/lib") #OpenCVConfig路径
find_package(OpenCV REQUIRED)
target_include_directories(${TARGET_NAME} PUBLIC ${OpenCV_INCLUDE_DIRS})
target_link_libraries(${TARGET_NAME} PUBLIC ${OpenCV_LIBS})


target_include_directories(${TARGET_NAME}
    PUBLIC
    $<INSTALL_INTERFACE:include>
    PUBLIC
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
)
#daheng
target_link_libraries(${TARGET_NAME} PUBLIC 
DahengSDK
)
# PCL
#set(PCL_DIR "C:/Program Files/PCL 1.14.0/cmake")
find_package(PCL REQUIRED)
include_directories(${PCL_INCLUDE_DIRS})
link_directories(${PCL_LIBRARY_DIRS})
#target_include_directories(${TARGET_NAME} PUBLIC ${PCL_INCLUDE_DIRS})
add_definitions(${PCL_DEFINITIONS})
target_link_libraries(${TARGET_NAME} PUBLIC ${PCL_LIBRARIES} )

# 添加 VTK 支持
find_package(VTK REQUIRED)
if (VTK_FOUND)
    include_directories(${VTK_INCLUDE_DIRS})
    target_link_libraries(${TARGET_NAME} PUBLIC ${VTK_LIBRARIES})
endif()

set_windows_md_flag(${TARGET_NAME})

